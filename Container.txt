1. Vector <vector> -> used for contiguous storage of data 
-----------------

  vector<int> v;

* v.push_back(3) ;
* v.pop_back() ;
* v.size() ;
* v.empty() ;
* v[i]=3 ;       
* v.at(i)=3 ;
* v.front() ;       // first element
* v.back() ;        // last element
* v.insert(iter,5); 
* v.erase(iter+5);  //erase 6th element


2. Iterator <iterator> - used for accessing container
---------------------                                                 * bool is_in = container.find(x) != container.end();

  vector<int>::iterator iter=v.begin(); 

3. Algorithms <algorithm> - used as array
------------------------

* sort(v.begin(),v.end()) ;
* sort(v.begin(),v.end(),greatest<int>);
* reverse(v.begin(),v.end()) ;


3. String <string> -> used for string literal
----------
           
  string str;                                                   n! -> permutations
                                                                n*(n+1)/2 -> no. of substrings
  str.substr(start_pos,len) ;     //str.substr(3,5);                                     
                                                             


3. Sets <set> - store keys in ascending order
----------
 
  set<int> myset;
  
 *myset.insert(20);
 *myset.clear();
 *myset.size();
 *myset.empty();



4. Maps <map> - store pair in ascending order of key
------------

  map<int,int> mymap;
  
 *mymap.insert(pair<int,int>(20,30)); 
 *mymap.clear();
 *mymap.size();
 *mymap.empty();
 *mymap[10] = 30 ;     // assigning second value using first value 



5. Pair <utility>
----------------

  pair<int,int> mypair;

 *foo = make_pair(5,3);
 *foo.first;
 *foo.second;


6. Multimap / Multiset - <map/set>duplicate keys are permitted
-----











   
